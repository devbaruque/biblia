// Configura√ß√£o da API do Google Gemini
const CONFIG = {
    // A chave ser√° carregada dinamicamente do .env ou configurada manualmente
    GEMINI_API_KEY: 'SUA_CHAVE_AQUI', // Ser√° substitu√≠da pela chave real do .env
    
    // URL da API do Gemini (atualizada para o modelo correto)
    GEMINI_API_URL: 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent',
    
    // Configura√ß√µes do modelo
    MODEL_CONFIG: {
        temperature: 0.7,
        topK: 40,
        topP: 0.95,
        maxOutputTokens: 512, // Reduzido de 1024 para 512 para respostas mais concisas
    },
    
    // Configura√ß√µes de seguran√ßa
    SAFETY_SETTINGS: [
        {
            category: "HARM_CATEGORY_HARASSMENT",
            threshold: "BLOCK_MEDIUM_AND_ABOVE"
        },
        {
            category: "HARM_CATEGORY_HATE_SPEECH",
            threshold: "BLOCK_MEDIUM_AND_ABOVE"
        },
        {
            category: "HARM_CATEGORY_SEXUALLY_EXPLICIT",
            threshold: "BLOCK_MEDIUM_AND_ABOVE"
        },
        {
            category: "HARM_CATEGORY_DANGEROUS_CONTENT",
            threshold: "BLOCK_MEDIUM_AND_ABOVE"
        }
    ]
};

// Fun√ß√£o para inicializar a configura√ß√£o com vari√°veis de ambiente
async function initializeConfig() {
    try {
        // Tenta carregar do arquivo .env
        const response = await fetch('.env');
        if (response.ok) {
            const envContent = await response.text();
            const lines = envContent.split('\n');
            
            lines.forEach(line => {
                const [key, value] = line.split('=');
                if (key && value && key.trim() === 'GEMINI_API_KEY') {
                    CONFIG.GEMINI_API_KEY = value.trim();
                    console.log('‚úÖ Chave da API carregada do arquivo .env');
                }
            });
        }
    } catch (error) {
        console.log('üìù Arquivo .env n√£o encontrado. Configure a chave manualmente no config.js');
    }
}

// Prompt do sistema para o Santo Saber
const SYSTEM_PROMPT = `Voc√™ √© o Santo Saber, um assistente especializado em quest√µes sobre Teologia, Filosofia, Evangelho e F√© crist√£. 

Suas caracter√≠sticas:
- Responda sempre em portugu√™s brasileiro
- Seja respeitoso e acolhedor
- Use conhecimento b√≠blico e teol√≥gico s√≥lido
- Cite vers√≠culos quando relevante (formato: Livro cap√≠tulo:vers√≠culo)
- Mantenha um tom pastoral e educativo
- Se a pergunta n√£o for sobre temas religiosos/espirituais, redirecione gentilmente para esses t√≥picos
- IMPORTANTE: Seja conciso e direto. Respostas de no m√°ximo 3-4 par√°grafos
- N√£o inicie com sauda√ß√µes como "Paz a voc√™!" a menos que seja especificamente solicitado

Lembre-se de manter o contexto da conversa e responder de forma natural e conversacional.`;

// Prompt especial para a primeira pergunta
const FIRST_MESSAGE_PROMPT = `Voc√™ √© o Santo Saber, um assistente especializado em quest√µes sobre Teologia, Filosofia, Evangelho e F√© crist√£. 

Esta √© a primeira pergunta do usu√°rio, ent√£o inicie sua resposta com "Paz a voc√™!" seguido da resposta.

Suas caracter√≠sticas:
- Responda sempre em portugu√™s brasileiro
- Seja respeitoso e acolhedor
- Use conhecimento b√≠blico e teol√≥gico s√≥lido
- Cite vers√≠culos quando relevante (formato: Livro cap√≠tulo:vers√≠culo)
- Mantenha um tom pastoral e educativo
- Se a pergunta n√£o for sobre temas religiosos/espirituais, redirecione gentilmente para esses t√≥picos
- IMPORTANTE: Seja conciso e direto. Respostas de no m√°ximo 3-4 par√°grafos

Lembre-se de manter o contexto da conversa e responder de forma natural e conversacional.`;

// Inicializa a configura√ß√£o
initializeConfig();

// Exporta as configura√ß√µes
window.CONFIG = CONFIG;
window.SYSTEM_PROMPT = SYSTEM_PROMPT;
window.FIRST_MESSAGE_PROMPT = FIRST_MESSAGE_PROMPT; 